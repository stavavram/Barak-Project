swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Swagger Test"
host: "localhost:1000"
schemes:
  - "http"
securityDefinitions:
  BasicAuth:
    type: basic
paths:
  /auth:
    post:
      tags:
        - "Auth"
      security:
        - BasicAuth: []
      operationId: "authenticate"
      description: "get token using username and password"
      responses:
        201:
          description: "successful operation"
          schema:
            type: string
      x-swagger-router-controller: AuthController
  /users:
    post:
      tags:
        - "Auth"
      operationId: "createUser"
      description: "create new user"
      parameters:
        - in: body
          name: userObj
          schema:
            $ref: '#/definitions/UserData'
          description: user data
        - in: header
          name: authorization
          type: string
          description: authorization
      responses:
        201:
          description: "successful operation"
          schema:
            type: string
      x-swagger-router-controller: AuthController
    get:
      tags:
        - "Auth"
      operationId: "getAllUsers"
      description: "get all users"
      parameters:
        - in: header
          name: authorization
          type: string
          description: authorization
      responses:
        200:
          description: "successful operation"
          schema:
            type: string
      x-swagger-router-controller: AuthController
    delete:
      tags:
        - "Auth"
      operationId: "deleteUsers"
      description: "delete users by user ids"
      parameters:
        - in: query
          name: userIds
          type: string
          description: the users ids
        - in: header
          name: authorization
          type: string
          description: authorization
      responses:
        200:
          description: "successful operation"
          schema:
            type: string
      x-swagger-router-controller: AuthController
  /uploadFile:
    post:
      tags:
        - "Upload"
      operationId: "uploadFile"
      description: "upload budget file"
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: upfile
          type: file
          description: The file to upload.
        - in: header
          name: authorization
          type: string
          description: authorization
      responses:
        201:
          description: "successful operation"
          schema:
            type: string
      x-swagger-router-controller: UploadController
  /projects:
    get:
      tags:
        - "Projects"
      operationId: "getProjects"
      description: "get all projects from collection"
      responses:
        200:
          description: "successful operation"
          schema:
            type: string
      x-swagger-router-controller: ProjectsController
    delete:
      tags:
        - "Projects"
      operationId: "deleteProjects"
      description: "delete projects by ids"
      parameters:
        - in: query
          name: projectIds
          type: string
          description: the project ids
        - in: header
          name: authorization
          type: string
          description: authorization
      responses:
        201:
          description: "successful operation"
          schema:
            type: string
      x-swagger-router-controller: ProjectsController

definitions:
  UserData:
    type: object
    required:
      - username
      - password
      - role
    properties:
      username:
        type: string
        default: "test"
      password:
        type: string
        default: "123"
      role:
        type: string
        default: "user"
